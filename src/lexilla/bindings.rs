#![allow(unused_variables, dead_code, non_snake_case)]
/* automatically generated by rust-bindgen 0.72.0 */

pub const LEXILLA_LIB: &[u8; 8] = b"lexilla\0";
pub const LEXILLA_EXTENSION: &[u8; 5] = b".dll\0";
pub const LEXILLA_NAMESPACE_SEPARATOR: u8 = 46u8;
pub const LEXILLA_GETLEXERCOUNT: &[u8; 14] = b"GetLexerCount\0";
pub const LEXILLA_GETLEXERNAME: &[u8; 13] = b"GetLexerName\0";
pub const LEXILLA_GETLEXERFACTORY: &[u8; 16] = b"GetLexerFactory\0";
pub const LEXILLA_CREATELEXER: &[u8; 12] = b"CreateLexer\0";
pub const LEXILLA_LEXERNAMEFROMID: &[u8; 16] = b"LexerNameFromID\0";
pub const LEXILLA_GETLIBRARYPROPERTYNAMES: &[u8; 24] = b"GetLibraryPropertyNames\0";
pub const LEXILLA_SETLIBRARYPROPERTY: &[u8; 19] = b"SetLibraryProperty\0";
pub const LEXILLA_GETNAMESPACE: &[u8; 13] = b"GetNameSpace\0";
pub type ILexer5 = ::std::os::raw::c_void;
pub type LexerFactoryFunction = ::std::option::Option<unsafe extern "C" fn() -> *mut ILexer5>;
pub type GetLexerCountFn = ::std::option::Option<unsafe extern "C" fn() -> ::std::os::raw::c_int>;
pub type GetLexerNameFn = ::std::option::Option<
    unsafe extern "C" fn(
        Index: ::std::os::raw::c_uint,
        name: *mut ::std::os::raw::c_char,
        buflength: ::std::os::raw::c_int,
    ),
>;
pub type GetLexerFactoryFn = ::std::option::Option<
    unsafe extern "C" fn(Index: ::std::os::raw::c_uint) -> LexerFactoryFunction,
>;
pub type CreateLexerFn = ::std::option::Option<
    unsafe extern "C" fn(name: *const ::std::os::raw::c_char) -> *mut ILexer5,
>;
pub type LexerNameFromIDFn = ::std::option::Option<
    unsafe extern "C" fn(identifier: ::std::os::raw::c_int) -> *const ::std::os::raw::c_char,
>;
pub type GetLibraryPropertyNamesFn =
    ::std::option::Option<unsafe extern "C" fn() -> *const ::std::os::raw::c_char>;
pub type SetLibraryPropertyFn = ::std::option::Option<
    unsafe extern "C" fn(key: *const ::std::os::raw::c_char, value: *const ::std::os::raw::c_char),
>;
pub type GetNameSpaceFn =
    ::std::option::Option<unsafe extern "C" fn() -> *const ::std::os::raw::c_char>;
unsafe extern "C" {
    pub fn CreateLexer(name: *const ::std::os::raw::c_char) -> *mut ILexer5;
}
unsafe extern "C" {
    pub fn GetLexerCount() -> ::std::os::raw::c_int;
}
unsafe extern "C" {
    pub fn GetLexerName(
        index: ::std::os::raw::c_uint,
        name: *mut ::std::os::raw::c_char,
        buflength: ::std::os::raw::c_int,
    );
}
unsafe extern "C" {
    pub fn GetLexerFactory(index: ::std::os::raw::c_uint) -> LexerFactoryFunction;
}
unsafe extern "C" {
    pub fn LexerNameFromID(identifier: ::std::os::raw::c_int) -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn GetLibraryPropertyNames() -> *const ::std::os::raw::c_char;
}
unsafe extern "C" {
    pub fn SetLibraryProperty(
        key: *const ::std::os::raw::c_char,
        value: *const ::std::os::raw::c_char,
    );
}
unsafe extern "C" {
    pub fn GetNameSpace() -> *const ::std::os::raw::c_char;
}
